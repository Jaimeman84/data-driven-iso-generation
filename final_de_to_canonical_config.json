{
  "MTI": {
    "name": "Message Type Indicator",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0100",
    "notes": "Indicates the type of message being sent. Examples: 0100 - Auth Request, 0200 - Financial Transaction Request, 0420 - Reversal Request."
  },
  "PrimaryBitmap": {
    "name": "Primary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "A1B2C3D4E5F6A7B8",
    "notes": "Each bit corresponds to a specific data element (1-64). If a bit is set to 1, the corresponding data element must be present. Presence of Secondary Bitmap is indicated by the first bit."
  },
  "SecondaryBitmap": {
    "name": "Secondary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "B1B2C3D4E5F6A7B8",
    "notes": "Used if data elements 65-128 are present. The primary bitmap's first bit must be set to 1 if this is included."
  },
  "2": {
    "name": "Primary Account Number (PAN)",
    "canonical": [],
    "format": "llvar",
    "type": "numeric",
    "length": null,
    "notes": "Should be validated using Luhn's check (mod 10). Must be encrypted and tokenized if present. Required for manually entered PANs or when track data is not available.",
    "max_length": 19,
    "active": false,
    "SampleData": "5314451120000000",
    "validation": {
      "skip": true,
      "reason": "PAN is not canonicalized for security reasons"
    }
  },
  "3": {
    "name": "Processing Code",
    "canonical": [
      "transaction.processingCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 6,
    "notes": "Defines transaction type and account information. Example: 000000 - Debit, 200000 - Credit (refund). First 2 digits indicate transaction type, next 2 indicate from account, and last 2 indicate to account.",
    "active": false,
    "SampleData": "000000"
  },
  "4": {
    "name": "Amount, Transaction",
    "canonical": [
      "transaction.transactionAmount.amount"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 12,
    "notes": "Represents the transaction amount in fixed length, padded with zeros. Last 2 digits represent decimal places.",
    "active": false,
    "SampleData": "000000020000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true,
        "handleDecimals": true
      }
    }
  },
  "5": {
    "name": "Amount, Settlement",
    "canonical": [
      "transaction.settlement.settlementAmount.amount"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 12,
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "active": false,
    "SampleData": "000000030000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true
      }
    }
  },
  "6": {
    "name": "Amount, Cardholder Billing",
    "canonical": [
      "transaction.cardHolderInfo.cardHolderBillingAmount.amount"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 12,
    "notes": "Required if the cardholder and settlement currencies are different. Includes fees from MasterCard.",
    "active": false,
    "SampleData": "000000040000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true
      }
    }
  },
  "7": {
    "name": "Transmission Date and Time",
    "canonical": [
      "transaction.transmissionDateTime"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 10,
    "notes": "Format: MMDDhhmmss. Must be a valid date and time expressed in GMT.",
    "active": false,
    "SampleData": "0329150405",
    "validation": {
      "type": "datetime",
      "format": {
        "input": "MMDDhhmmss",
        "canonical": "YYYY-MM-DDThh:mm:ssZ"
      }
    }
  },
  "8": {
    "name": "Amount, Cardholder Billing Fee",
    "canonical": [
      "transaction.cardHolderInfo.cardHolderFees.cardHolderFee.amount"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 8,
    "notes": "Required only if requested by the issuer. Not expected for domestic transactions.",
    "active": false,
    "SampleData": "01000000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true
      }
    }
  },
  "9": {
    "name": "Conversion Rate, Settlement",
    "canonical": [
      "transaction.settlement.settlementConversionRate"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 8,
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "active": false,
    "SampleData": "02000000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true
      }
    }
  },
  "10": {
    "name": "Conversion Rate, Cardholder Billing",
    "canonical": [
      "transaction.cardHolderInfo.cardHolderConversionRate"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 8,
    "notes": "Required if the cardholder and settlement currencies are different. Not applicable for domestic transactions.",
    "active": false,
    "SampleData": "03000000",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true
      }
    }
  },
  "11": {
    "name": "System Trace Audit Number",
    "canonical": [
      "transaction.systemTraceAuditNumber"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 6,
    "notes": "Generated by the acquirer/merchant and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "active": false,
    "SampleData": "130644"
  },
  "12": {
    "name": "Time, Local Transaction",
    "canonical": [
      "transaction.transactionDateTime"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 6,
    "notes": "Format: hhmmss. Must be a valid time. Paired with DE 13 for canonical datetime.",
    "active": false,
    "SampleData": "230939",
    "validation": {
      "type": "datetime",
      "format": {
        "input": "hhmmss",
        "canonical": "YYYY-MM-DDThh:mm:ssZ",
        "pairedField": {
          "field": "13",
          "type": "time"
        }
      }
    }
  },
  "13": {
    "name": "Date, Local Transaction",
    "canonical": [
      "transaction.transactionDateTime"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "notes": "Format: MMDD. Must be a valid date. Paired with DE 12 for canonical datetime.",
    "active": false,
    "SampleData": "0603",
    "validation": {
      "type": "datetime",
      "format": {
        "input": "MMDD",
        "canonical": "YYYY-MM-DDThh:mm:ssZ",
        "pairedField": {
          "field": "12",
          "type": "date"
        }
      }
    }
  },
  "14": {
    "name": "Date, Expiration",
    "canonical": [],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "notes": "Format: YYMM. Used along with DE 2 to validate the card.",
    "active": false,
    "SampleData": "0231",
    "validation": {
      "skip": true,
      "reason": "Exp. Date is not canonicalized for security reasons"
    }
  },
  "15": {
    "name": "Date, Settlement",
    "canonical": [
      "transaction.settlement.settlementDate"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "notes": "Format: MMDD. Must be a valid date. Checked against issuer's system time for variance.",
    "active": false,
    "SampleData": "0331"
  },
  "16": {
    "name": "Date, Conversion",
    "canonical": [
      "transaction.settlement.settlementConversionDate"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "active": false,
    "notes": "Format: MMDD. Must be a valid date."
  },
  "17": {
    "name": "Date, Capture",
    "canonical": [
      "transaction.captureDate"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "notes": "Required if requested by the issuer. Format: MMDD.",
    "active": false,
    "SampleData": "0431"
  },
  "18": {
    "name": "Merchant Type",
    "canonical": [
      "transaction.merchant.categoryCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 4,
    "notes": "Validates against a list of accepted Merchant Category Codes (MCCs).",
    "active": false,
    "SampleData": "1313"
  },
  "19": {
    "name": "Acquiring Institution Country Code",
    "canonical": [
      "transaction.acquirer.acquirerAddress.country.countryCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "active": false,
    "SampleData": "001"
  },
  "20": {
    "name": "Primary Account Number (PAN) Extended Country Code",
    "canonical": [],
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "USA",
    "notes": "Required if DE 34 (PAN Extended) is sent. Not applicable for MVP.",
    "validation": {
      "skip": true,
      "reason": "PAN Extended Country Code is not canonicalized because it is not required."
    }
  },
  "21": {
    "name": "Forwarding Institution Country Code",
    "canonical": [
      "transaction.forwardingInstitution.address.country.countryCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "active": false,
    "SampleData": "001"
  },
  "22": {
    "name": "Point-of-Service Entry Mode",
    "canonical": [
      "transaction.channel.channelType"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Indicates how card data was captured. Examples: 01X - Manual entry, 02X - Card swipe, 06X - Card swipe with PIN, 09X - eCommerce.",
    "active": false,
    "SampleData": "020",
    "validation": {
      "type": "pos_entry_mode"
    }
  },
  "23": {
    "name": "Card Sequence Number",
    "canonical": [
      "transaction.card.sequenceNumber"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Sent only if track data is not sent for POS transactions and one PAN has multiple cards.",
    "active": false,
    "SampleData": "022"
  },
  "25": {
    "name": "Point-of-Service Condition Code",
    "canonical": [
      "transaction.posConditionCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 2,
    "notes": "No specific validation required. Optional field.",
    "active": false,
    "SampleData": "022"
  },
  "26": {
    "name": "Point-of-Service PIN Capture Code",
    "canonical": [],
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "11",
    "notes": "Indicates the PIN block. Ignored in production unless certification requires it.",
    "validation": {
      "skip": true,
      "reason": "Point-of-Service PIN Code is not canonicalized because it is not required."
    }
  },
  "27": {
    "name": "Authorization Identification Response Length",
    "canonical": [
      "transaction.authorization.authCodeResponseLength"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 1,
    "notes": "Used by acquirers that cannot accept 6-byte values in DE 38. Ignored if present.",
    "active": false,
    "SampleData": "1"
  },
  "28": {
    "name": "Amount, Transaction Fee",
    "canonical": [
      "transaction.fees.transactionFees.amount",
      "transaction.fees.transactionFees.debitCreditIndicatorType"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 9,
    "notes": "Required when DE 30 is present. Indicates surcharge, rebate, or transaction fee.",
    "active": false,
    "SampleData": "C00000050",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true,
        "debitCreditIndicator": {
          "D": "DEBIT_AMOUNT",
          "0": "DEBIT_AMOUNT",
          "C": "CREDIT_AMOUNT"
        }
      }
    }
  },
  "29": {
    "name": "Amount, Settlement Fee",
    "canonical": [
      "transaction.settlement.settlementFees.settlementFee.amount",
      "transaction.settlement.settlementFees.settlementFee.debitCreditIndicatorType"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 9,
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "active": false,
    "SampleData": "D00000060",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true,
        "debitCreditIndicator": {
          "D": "DEBIT_AMOUNT",
          "0": "DEBIT_AMOUNT",
          "C": "CREDIT_AMOUNT"
        }
      }
    }
  },
  "30": {
    "name": "Amount, Transaction Processing Fee",
    "canonical": [
      "transaction.fees.processingFee.amount",
      "transaction.fees.processingFee.debitCreditIndicatorType"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 9,
    "notes": "Required if requested by the issuer. No specific validation required.",
    "active": false,
    "SampleData": "C00000070",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true,
        "debitCreditIndicator": {
          "D": "DEBIT_AMOUNT",
          "0": "DEBIT_AMOUNT",
          "C": "CREDIT_AMOUNT"
        }
      }
    }
  },
  "31": {
    "name": "Amount, Settlement Processing Fee",
    "canonical": [
      "transaction.settlement.settlementFees.processingFee.amount",
      "transaction.settlement.settlementFees.processingFee.debitCreditIndicatorType"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 9,
    "notes": "Required if requested by the issuer. No specific validation required.",
    "active": false,
    "SampleData": "C00000070",
    "validation": {
      "type": "amount",
      "rules": {
        "removeLeadingZeros": true,
        "debitCreditIndicator": {
          "D": "DEBIT_AMOUNT",
          "0": "DEBIT_AMOUNT",
          "C": "CREDIT_AMOUNT"
        }
      }
    }
  },
  "32": {
    "name": "Acquiring Institution Identification Code",
    "canonical": [
      "transaction.acquirer.acquirerId"
    ],
    "format": "llvar",
    "type": "numeric",
    "length": null,
    "notes": "Critical for MID adjudication. Format: 1NNNNNNNNC or 59NNNNNNNNC. Check digit must be validated.",
    "max_length": 11,
    "active": false,
    "SampleData": "21089211169"
  },
  "33": {
    "name": "Forwarding Institution Identification Code",
    "canonical": [
      "transaction.forwardingInstitution.forwardingInstitutionCode"
    ],
    "format": "llvar",
    "type": "numeric",
    "length": null,
    "notes": "Optional field. No specific validation required.",
    "max_length": 11,
    "active": false,
    "SampleData": "09111111111"
  },
  "34": {
    "name": "Primay Account Number (PAN) Extended",
    "canonical": [],
    "format": "llvar",
    "max_length": 28,
    "type": "numeric",
    "active": false,
    "SampleData": "2611111111111111111111111111",
    "notes": "Optional field. No specific validation required.",
    "validation": {
      "skip": true,
      "reason": "PAN Extended is not canonicalized because it is not required."
    }
  },
  "35": {
    "name": "Track 2 Data",
    "canonical": [],
    "format": "llvar",
    "max_length": 37,
    "type": "alphanumeric",
    "active": false,
    "SampleData": ";5314451120000000=2812221711760?",
    "validation": {
      "skip": true,
      "reason": "Track 2 data is not canonicalized for security reasons"
    }
  },
  "36": {
    "name": "Track 3 Data",
    "canonical": [],
    "format": "llvar",
    "max_length": 104,
    "type": "alphanumeric",
    "active": false,
    "SampleData": ";5314451120000000=2812221711760?",
    "validation": {
      "skip": true,
      "reason": "Track 3 data is not canonicalized because is not populated as part of the embossing"
    }
  },
  "37": {
    "name": "Retrieval Reference Number",
    "canonical": [
      "transaction.retrievalReferenceNumber"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 12,
    "notes": "Generated by the acquirer and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "active": false,
    "SampleData": "021700130644"
  },
  "38": {
    "name": "Authorization Identification Response",
    "canonical": [
      "transaction.authorization.authCode"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 6,
    "notes": "Populated by the issuer. May be pre-populated in advice messages.",
    "active": false,
    "SampleData": "AIR111"
  },
  "39": {
    "name": "Response Code",
    "canonical": [
      "transaction.response.responseCode",
      "transaction.response.responseDescription",
      "transaction.response.responseDomain"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 2,
    "notes": "Response code indicating transaction status and reason",
    "active": true,
    "validation": {
      "type": "response_code",
      "rules": {
        "mapping": {
          "00": {
            "description": "Approved or completed successfully",
            "domain": "Auth Engine. NI for 800"
          },
          "01": {
            "description": "Refer to card issuer",
            "domain": "Auth Engine - Fraud Check service"
          },
          "02": {
            "description": "Refer to card issuers special conditions",
            "domain": "Auth Engine - Fraud Check service"
          },
          "03": {
            "description": "Invalid merchant or use of MCC - correct and reattempt",
            "domain": "NI && BAS - Rule Engine"
          },
          "04": {
            "description": "Pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "05": {
            "description": "Do not honor",
            "domain": "C-Box && Auth Engine - Card or member check"
          },
          "06": {
            "description": "Error",
            "domain": "NI"
          },
          "07": {
            "description": "Pick-up card, special conditions",
            "domain": "Auth Engine - Fraud Check service"
          },
          "08": {
            "description": "Honor with identification (Processed as an approval)",
            "domain": "Auth Engine - Fraud Check service"
          },
          "09": {
            "description": "Request in progress",
            "domain": "NI - 101 or 201 received while 100 or 200 in progress"
          },
          "10": {
            "description": "Approved for partial amount (Processed as an approval)",
            "domain": "NA"
          },
          "11": {
            "description": "Approved (VIP: Very Important Person) (Processed as an approval)",
            "domain": "Auth Engine - Some one like Parkers or Plan person identified as Member Master"
          },
          "12": {
            "description": "Invalid transaction",
            "domain": "NI - Validation rule"
          },
          "13": {
            "description": "Invalid amount",
            "domain": "NI - Validation rule"
          },
          "14": {
            "description": "Invalid card (no such number) or invalid account",
            "domain": "NI for Luhn failure; C-Box"
          },
          "15": {
            "description": "No such issuer",
            "domain": "NI - Bin Validation"
          },
          "16": {
            "description": "Approved, update track 3 (Processed as an approval)",
            "domain": "Auth Engine (May not be applicable for NB)"
          },
          "18": {
            "description": "Customer dispute, chargeback (future)",
            "domain": "NA"
          },
          "19": {
            "description": "Re-enter transaction",
            "domain": "NI - Validation rule"
          },
          "23": {
            "description": "Unacceptable transaction fee",
            "domain": "NI - Validation rule"
          },
          "30": {
            "description": "Format error",
            "domain": "NI - Parsing error (DE 44 (Additional Response Data) needs to be populated)"
          },
          "31": {
            "description": "Bank not supported by switch",
            "domain": "NA"
          },
          "33": {
            "description": "Expired card, pick-up",
            "domain": "C-Box"
          },
          "34": {
            "description": "Suspected fraud, pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "35": {
            "description": "Card acceptor contact acquirer, pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "36": {
            "description": "Restricted card, pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "37": {
            "description": "Card acceptor call acquirer security, pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "38": {
            "description": "Allowable PIN tries exceeded, pick-up",
            "domain": "NA"
          },
          "39": {
            "description": "No credit account",
            "domain": "NA"
          },
          "40": {
            "description": "Requested function not supported",
            "domain": "NI - Validation rule"
          },
          "41": {
            "description": "Lost card, pick-up",
            "domain": "C-Box"
          },
          "42": {
            "description": "No universal account",
            "domain": "NA"
          },
          "43": {
            "description": "Stolen card, pick-up",
            "domain": "C-Box"
          },
          "44": {
            "description": "No investment account",
            "domain": "NA"
          },
          "51": {
            "description": "Insufficient funds",
            "domain": "Auth Engine - Non-integrated flow"
          },
          "52": {
            "description": "No checking account",
            "domain": "NA"
          },
          "53": {
            "description": "No savings account",
            "domain": "NA"
          },
          "54": {
            "description": "Expired card",
            "domain": "C-Box"
          },
          "55": {
            "description": "Incorrect PIN",
            "domain": "C-Box - only during certification"
          },
          "56": {
            "description": "No card record",
            "domain": "C-Box"
          },
          "57": {
            "description": "Transaction not permitted to cardholder",
            "domain": "C-Box && Auth Engine - Card or member check"
          },
          "58": {
            "description": "Transaction not permitted to terminal (may also be a chargeback)",
            "domain": "BAS - Rules engine"
          },
          "59": {
            "description": "Suspected fraud",
            "domain": "Auth Engine - Fraud Check service"
          },
          "60": {
            "description": "Card acceptor contact acquirer",
            "domain": "NA"
          },
          "61": {
            "description": "Exceeds amount limit",
            "domain": "BAS - Rules engine"
          },
          "62": {
            "description": "Restricted card",
            "domain": "C-Box && Auth Engine - Card or member check"
          },
          "63": {
            "description": "Security violation (may also be a chargeback)",
            "domain": "Auth Engine - Fraud Check service"
          },
          "65": {
            "description": "Exceeds withdrawal frequency limit",
            "domain": "BAS - Rules engine"
          },
          "66": {
            "description": "Card acceptor call acquirer security",
            "domain": "Auth Engine - Fraud Check service"
          },
          "67": {
            "description": "Hard capture, pick-up",
            "domain": "Auth Engine - Fraud Check service"
          },
          "75": {
            "description": "Allowable number of PIN tries exceeded",
            "domain": "NA"
          },
          "76": {
            "description": "Key synchronization error",
            "domain": "NI - MTI 0800 Key exchange"
          },
          "78": {
            "description": "Customer not eligible for POS (Star)",
            "domain": "Auth Engine - Member check"
          },
          "79": {
            "description": "Invalid digital signature",
            "domain": "Auth Engine, NI for MTI 0800 (\"Key exchange validation failed\")"
          },
          "80": {
            "description": "Stale dated transaction (Star)",
            "domain": "NI - Validation rule"
          },
          "81": {
            "description": "Issuer requested standin",
            "domain": "NI - Need to define the requirements with NB"
          },
          "89": {
            "description": "Card verification value (CVC,CVV) failed verification (no pickup)",
            "domain": "C-Box"
          },
          "90": {
            "description": "Cutoff is in progress",
            "domain": "Auth Engine - Health checks, NI - MTI 0800 for cut off"
          },
          "91": {
            "description": "Issuer or switch is unavailable/inoperative",
            "domain": "NI-  Cbox unavailable"
          },
          "92": {
            "description": "Financial institution or intermediate network unknown for routing",
            "domain": "NA"
          },
          "93": {
            "description": "Transaction cannot be completed, violation of law",
            "domain": "Auth Engine - Fraud check"
          },
          "94": {
            "description": "Duplication transaction",
            "domain": "NI - Duplicate check, also applicable for MTI 800"
          },
          "95": {
            "description": "Reconcile error",
            "domain": "Auth Engine"
          },
          "96": {
            "description": "System malfunction",
            "domain": "NI - communciation errors"
          },
          "N0": {
            "description": "Authorization life cycle unacceptable",
            "domain": "Auth Engine"
          },
          "N1": {
            "description": "Authorization life cycle expired",
            "domain": "Auth Engine"
          },
          "R2": {
            "description": "Allowable PAN entries warning -- approved",
            "domain": "NA"
          },
          "R3": {
            "description": "Approved with overdraft protection",
            "domain": "NA"
          },
          "R4": {
            "description": "Bad CVC3/dCVV",
            "domain": "C-Box - CNP txns"
          },
          "S0": {
            "description": "Check not acceptable for cash",
            "domain": "NA"
          },
          "S1": {
            "description": "Check not acceptable",
            "domain": "NA"
          },
          "S2": {
            "description": "Check deposit limit exceeded",
            "domain": "NA"
          },
          "S3": {
            "description": "Cash back limit exceeded",
            "domain": "NA"
          },
          "S4": {
            "description": "Check amount does not match courtesy amount",
            "domain": "NA"
          },
          "S5": {
            "description": "PIN not selected",
            "domain": "NA"
          },
          "S6": {
            "description": "PIN already selected",
            "domain": "NA"
          },
          "S7": {
            "description": "Unmatched voucher information",
            "domain": "BAS - Rules engine"
          },
          "S8": {
            "description": "Allowable PAN entries exceeded -- denial",
            "domain": "Auth Engine - Velocity checks"
          },
          "S9": {
            "description": "Expiration date mismatch",
            "domain": "C-Box"
          },
          "SA": {
            "description": "Inactive card",
            "domain": "C-Box"
          },
          "SB": {
            "description": "Expiration date mismatch (card pickup)",
            "domain": "C-Box"
          },
          "SC": {
            "description": "Item suspected for stop pay",
            "domain": "NA"
          },
          "SD": {
            "description": "Account closed",
            "domain": "Auth Engine - Member check"
          },
          "SE": {
            "description": "Ineligible account",
            "domain": "Auth Engine - Member check"
          },
          "SF": {
            "description": "Item submitted more than two times",
            "domain": "NA"
          },
          "SG": {
            "description": "No account on file - absolute",
            "domain": "NA"
          },
          "SH": {
            "description": "Unable to locate",
            "domain": "NA"
          },
          "SI": {
            "description": "General denial",
            "domain": "NA"
          },
          "SJ": {
            "description": "Item settled via ACH",
            "domain": "NA"
          },
          "SK": {
            "description": "Cross-reference card not found",
            "domain": "NA"
          },
          "SL": {
            "description": "Category limit exceeded",
            "domain": "BAS - Rules engine"
          },
          "SM": {
            "description": "Transaction limit exceeded",
            "domain": "BAS - Rules engine"
          },
          "SN": {
            "description": "Daily limit exceeded",
            "domain": "BAS - Rules engine"
          },
          "SO": {
            "description": "Monthly limit exceeded",
            "domain": "BAS - Rules engine"
          },
          "SP": {
            "description": "Invalid secret code",
            "domain": "NA"
          },
          "SQ": {
            "description": "PIN key sync error",
            "domain": "NA"
          },
          "SR": {
            "description": "Bad CVC2/CVV2/CVx2",
            "domain": "C-Box - CNP txns"
          },
          "SS": {
            "description": "Stop payment order",
            "domain": "Auth Engine"
          },
          "ST": {
            "description": "Revocation of authorization order",
            "domain": "NA"
          },
          "SV": {
            "description": "Stop reoccurring payments",
            "domain": "NA"
          },
          "T3": {
            "description": "Lost card (no pickup)",
            "domain": "C-Box"
          },
          "T4": {
            "description": "Closed account",
            "domain": "Auth Engine - Member check"
          },
          "T5": {
            "description": "Dormant account",
            "domain": "Auth Engine - Member check"
          },
          "T6": {
            "description": "Special conditions (no pick-up)",
            "domain": "NA"
          },
          "T7": {
            "description": "Purchase-only approval for full purchase amount with cash back transaction.",
            "domain": "NA"
          },
          "T9": {
            "description": "Insufficient funds for fees",
            "domain": "Auth Engine"
          },
          "TA": {
            "description": "ARQC validation failed for chip card",
            "domain": "C-Box - NA for current implementation"
          },
          "TB": {
            "description": "Unsafe PIN",
            "domain": "C-Box - NA for current implementation"
          },
          "TC": {
            "description": "Additional customer authentication required",
            "domain": "Auth Engine - NA for current implementation"
          },
          "TD": {
            "description": "PIN required for additional security",
            "domain": "C-Box - NA for current implementation"
          },
          "TH": {
            "description": "Life cycle decline",
            "domain": "Auth Engine"
          },
          "TI": {
            "description": "Policy decline",
            "domain": "BAS - Rules engine"
          },
          "TJ": {
            "description": "Fraud/security decline",
            "domain": "Auth Engine - Fraud check"
          },
          "TM": {
            "description": "Valid account, but anticipated amount not available or not supported",
            "domain": "Auth Engine - NA for current implementation"
          }
        }
      }
    }
  },
  "40": {
    "name": "Service Restriction Code",
    "canonical": [
      "transaction.member.serviceRestrictionCode"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 3,
    "notes": "Optional field. No specific validation required.",
    "active": false,
    "SampleData": "SR1"
  },
  "41": {
    "name": "Card Acceptor Terminal Identification",
    "canonical": [
      "transaction.merchant.terminalId"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 8,
    "notes": "Used for fraud analysis and MID verification.",
    "active": false,
    "SampleData": "ey5A3etE"
  },
  "42": {
    "name": "Card Acceptor Identification Code",
    "canonical": [
      "transaction.merchant.merchantId"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 15,
    "notes": "Critical for MID-based adjudication. Default to MCC if not present for non-integrated merchants.",
    "active": false,
    "SampleData": "ul3xfY8LZ1jCJdv"
  },
  "43": {
    "name": "Card Acceptor Name / Location",
    "canonical": [
      "transaction.merchant.address.addressLine1",
      "transaction.merchant.address.city",
      "transaction.merchant.address.state",
      "transaction.merchant.address.country.countryCode"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 40,
    "notes": "Critical for MID-based adjudication.",
    "active": false,
    "SampleData": "Best Buy 123 Main St   New York     NYUS",
    "validation": {
            "type": "merchant_location"
    }
  },
  "44": {
    "name": "Additional Response Data",
    "canonical": [
      "transaction.authorization.additionalResponseData"
    ],
    "format": "unknown",
    "type": "alphanumeric",
    "length": null,
    "active": false,
    "notes": ""
  },
  "45": {
    "name": "Track 1 Data",
    "canonical": [],
    "format": "llvar",
    "max_length": 76,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "12T1D525MAX076",
    "validation": {
      "skip": true,
      "reason": "Track 1 data is not canonicalized for security reasons"
    }
  },
  "46": {
    "name": "Additional Fees",
    "canonical": [
      "transaction.fees.additionalFees[0].feeType",
      "transaction.fees.additionalFees[0].settleMemoIndicator",
      "transaction.fees.additionalFees[0].decimalizationIndicator",
      "transaction.fees.additionalFees[0].fee.amount.amount",
      "transaction.fees.additionalFees[0].fee.amount.debitCreditIndicatorType",
      "transaction.fees.additionalFees[0].settlement.settlementAmount.amount",
      "transaction.fees.additionalFees[0].settlement.settlementAmount.debitCreditIndicatorType"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Not expected for MVP. Pass to auth engine if received.",
    "max_length": 88,
    "active": false,
    "SampleData": "013ABC1235MAX088",
    "validation": {
      "type": "additional_fees",
      "rules": {
        "isArray": true,
        "positions": {
          "feeType": {
            "start": 1,
            "end": 2,
            "mapping": {
              "00": "TRANSACTION_FEE",
              "15": "MASTERCARD_CURRENCY_CONVERSION_ASSESSMENT",
              "71": "OPTIONAL_ISSUER_FEE",
              "72": "FOREIGN_EXCHANGE_FEE",
              "73": "OVERDRAFT_FEE",
              "74": "ADDITIONAL_TRANSACTION_FEE_1",
              "75": "ADDITIONAL_TRANSACTION_FEE_2"
            }
          },
          "settleMemoIndicator": {
            "position": 3,
            "mapping": {
              "0": "TRANSACTION_FEE_EXCLUDED",
              "1": "SURCHARGE_FEE_INCLUDED"
            }
          },
          "decimalizationIndicator": {
            "position": 4,
            "mapping": {
              "0": "0"
            }
          },
          "feeAmount": {
            "start": 5,
            "end": 13,
            "components": {
              "debitCreditIndicator": {
                "position": 5,
                "mapping": {
                  "C": "CREDIT_AMOUNT",
                  "D": "DEBIT_AMOUNT"
                }
              },
              "amount": {
                "start": 6,
                "end": 13,
                "type": "numeric",
                "maxValue": 99999999,
                "removeLeadingZeros": true
              }
            }
          },
          "settlementAmount": {
            "start": 14,
            "end": 22,
            "components": {
              "debitCreditIndicator": {
                "position": 14,
                "mapping": {
                  "C": "CREDIT_AMOUNT",
                  "D": "DEBIT_AMOUNT"
                }
              },
              "amount": {
                "start": 15,
                "end": 22,
                "type": "numeric",
                "maxValue": 99999999,
                "removeLeadingZeros": true
              }
            }
          }
        }
      }
    }
  },
  "47": {
    "name": "Additional Data National",
    "canonical": [],
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX100",
    "notes": "Mainly used for 3DS authentication values. Ignore for MVP unless 3DS is supported.",
    "validation": {
      "skip": true,
      "reason": "Additional Data National is not canonicalized because 3DS is not required."
    }
  },
  "48": {
    "name": "Institution/Merchant Name/Consumer Name",
    "canonical": [
      "transaction.merchant.name"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Ignore if received as it contains unreliable consumer data.",
    "max_length": 25,
    "active": false,
    "SampleData": "13ABC1235MAX025"
  },
  "49": {
    "name": "Currency Code, Transaction",
    "canonical": [
      "transaction.transactionAmount.currencyCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Must be USD (840) for domestic transactions. Decline if any other currency code is received.",
    "active": false,
    "SampleData": "840",
    "validation": {
      "type": "currency",
      "format": {
        "input": "numeric",
        "canonical": "ISO",
        "mapping": {
          "840": "840"
        }
      }
    }
  },
  "50": {
    "name": "Currency Code, Settlement",
    "canonical": [
      "transaction.settlement.settlementAmount.currencyCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "active": false,
    "SampleData": "001"
  },
  "51": {
    "name": "Currency Code, Cardholder Billing",
    "canonical": [
      "transaction.cardHolderInfo.cardHolderBillingAmount.currencyCode"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 3,
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "active": false,
    "SampleData": "002"
  },
  "52": {
    "name": "Personal Identification Number (PIN) Data",
    "canonical": [],
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100",
    "notes": "Ignored in production unless certification requires it. Send to C-Box for validation during certification.",
    "validation": {
      "skip": true,
      "reason": "PIN Data is not canonicalized because 3DS is not supported."
    }
  },
  "54": {
    "name": "Additional Amounts",
    "canonical": [
      "transaction.additionalAmounts[0].accountType",
      "transaction.additionalAmounts[0].amountType",
      "transaction.additionalAmounts[0].amount.currencyCode",
      "transaction.additionalAmounts[0].amount.debitCreditIndicatorType",
      "transaction.additionalAmounts[0].amount.amount"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Used for healthcare transactions. Pass to auth engine if received.",
    "max_length": 240,
    "active": false,
    "SampleData": "020ABC12345678910MAX240",
    "validation": {
      "type": "additional_amounts",
      "rules": {
        "positions": {
          "accountType": {
            "start": 1,
            "end": 2,
            "mapping": {
              "00": "DEFAULT"
            }
          },
          "amountType": {
            "start": 3,
            "end": 4,
            "mapping": {
              "01": "ORIGINAL_REQUEST_AMOUNT",
              "02": "ACCOUNT_AVAIALBE_BALANCE",
              "03": "CASH_BACK_AMOUNT"
            }
          },
          "currencyCode": {
            "start": 5,
            "end": 7
          },
          "amount": {
            "start": 8,
            "end": 20,
            "components": {
              "debitCreditIndicator": {
                "position": 8,
                "mapping": {
                  "C": "CREDIT_AMOUNT",
                  "D": "DEBIT_AMOUNT"
                }
              },
              "amount": {
                "start": 9,
                "end": 20,
                "type": "numeric",
                "removeLeadingZeros": true
              }
            }
          }
        }
      }
    }
  },
  "55": {
    "name": "Integrated Chip Card (ICC) Data",
    "canonical": [],
    "format": "lllvar",
    "max_length": 255,
    "type": "binary",
    "active": false,
    "SampleData": "110101110001101111100101111100011111010110100101111100110111000001000111101001101101100111101000110111110111100110100110000101101101000011000110010011111100011000001100010001010010001000101010101001111010100000011101101001110000100011000110101100100111101",
    "notes": "Decline with error code 12 if received, as EMV transactions are not supported in MVP.",
    "validation": {
      "skip": true,
      "reason": "ICC Data is not canonicalized because EMV transactions are not supported."
    }
  },
  "56": {
    "name": "Replacement Additional Fees",
    "canonical": [
      "transaction.fees.replacementAdditionalFees.feeType",
      "transaction.fees.replacementAdditionalFees.settleMemoIndicator",
      "transaction.fees.replacementAdditionalFees.decimalizationIndicator",
      "transaction.fees.replacementAdditionalFees.amount.debitCreditIndicator",
      "transaction.fees.replacementAdditionalFees.Fee.amount.amount",
      "transaction.fees.replacementAdditionalFees.settlementFee.amount.amount"
    ],
    "format": "unknown",
    "type": "alphanumeric",
    "length": null,
    "active": false,
    "notes": ""
  },
  "57": {
    "name": "Authorization Life Cycle",
    "canonical": [
      "transaction.authorizationLifeCycle"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Critical for fraud analysis. Values: 200 - Previous Auth Completion, 600 - PreAuth completion.",
    "max_length": 3,
    "active": false,
    "SampleData": "200"
  },
  "58": {
    "name": "National Point-of-Service Condition Code",
    "canonical": [
      "transaction.nationalPOSConditionCode.terminalClass.AttendanceIndicator",
      "transaction.nationalPOSConditionCode.terminalClass.terminalOperation",
      "transaction.nationalPOSConditionCode.terminalClass.terminalLocation",
      "transaction.nationalPOSConditionCode.presentationType.cardHolderPresence",
      "transaction.nationalPOSConditionCode.presentationType.cardPresence",
      "transaction.nationalPOSConditionCode.presentationType.cardRetentionCapability",
      "transaction.nationalPOSConditionCode.presentationType.transactionStatus",
      "transaction.nationalPOSConditionCode.SecurityCondition",
      "transaction.nationalPOSConditionCode.terminalType",
      "transaction.nationalPOSConditionCode.cardDataInputCapability"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Provides details about transaction conditions. Subfields include Terminal Class, Presentation Type, Security Condition, etc.",
    "max_length": 30,
    "active": false,
    "SampleData": "010ABC11MAX30",
    "validation": {
      "type": "pos_condition_code",
      "rules": {
        "positions": {
          "terminalClass": {
            "start": 1,
            "end": 3,
            "components": {
              "attendanceIndicator": {
                "position": 1,
                "mapping": {
                  "0": "ATTENDED",
                  "1": "UNATTENDED",
                  "2": "RESERVED"
                }
              },
              "terminalOperation": {
                "position": 2,
                "mapping": {
                  "0": "CUSTOMER_OPERATED",
                  "1": "CARD_ACCEPTOR_OPERATED",
                  "2": "ADMINISTRATIVE",
                  "3": "TERMINAL_OPERATION_RESERVED"
                }
              },
              "terminalLocation": {
                "position": 3,
                "mapping": {
                  "0": "ON_PREMISE",
                  "1": "OFF_PREMISE",
                  "2": "TERMINAL_LOCATION_RESERVED"
                }
              }
            }
          },
          "presentationType": {
            "start": 4,
            "end": 7,
            "components": {
              "cardHolderPresence": {
                "position": 4,
                "mapping": {
                  "0": "CUSTOMER_PRESENT",
                  "1": "CUSTOMER_NOT_PRESENT",
                  "2": "MAIL_OR_FACSIMILE_ORDER",
                  "3": "TELEPHONE_ORDER",
                  "4": "STANDING_ORDER_OR_RECURRING_PAYMENT",
                  "5": "CARD_HOLDER_PRESENCE_RESERVED",
                  "6": "CARD_HOLDER_PRESENCE_PRE_AUTHORIZED_PURCHASE",
                  "7": "DEFERRED_BILLING",
                  "8": "DEFERRED_AUTHORIZATION",
                  "9": "INSTALLMENT_PAYMENT"
                }
              },
              "cardPresence": {
                "position": 5,
                "mapping": {
                  "0": "CARD_PRESENT",
                  "1": "CARD_NOT_PRESENT",
                  "2": "CARD_PRESENCE_RESERVED",
                  "3": "PRE_AUTHORIZED_PURCHASE"
                }
              },
              "cardRetentionCapability": {
                "position": 6,
                "mapping": {
                  "0": "NO_CARD_RETENTION",
                  "1": "HAS_CARD_RETENTION",
                  "2": "CARD_RETENTION_CAPABILITY_RESERVED"
                }
              },
              "transactionStatus": {
                "position": 7,
                "mapping": {
                  "0": "ORIGINAL_PRESENTMENT",
                  "1": "FIRST_REPRESENTMENT",
                  "2": "SECOND_REPRESENTMENT",
                  "3": "THIRD_REPRESENTMENT",
                  "4": "PREVIOUSLY_AUTHORIZED_REQUEST",
                  "5": "RESUBMISSION",
                  "6": "TRANSACTION_STATUS_RESERVED",
                  "7": "ACCOUNT_INQUIRY"
                }
              }
            }
          },
          "securityCondition": {
            "position": 8,
            "mapping": {
              "0": "SECURITY_CONDITION_UNKNOWN",
              "1": "NO_SECURITY_CONCERN",
              "2": "SUSPECTED_FRAUD",
              "3": "IDENTIFICATION_VERIFIED",
              "4": "DIGITAL_SIGNATURE_TRANSACTION",
              "5": "NON_SECURE_UNKNOWN_TRANSACTION",
              "6": "SECURE_TRANSACTION_WITH_CARDHOLDER_CERT",
              "7": "SECURE_TRANSACTION_WITHOUT_CARDHOLDER_CERT",
              "8": "CHANNEL_ENCRYPTED_ECOMMERCE",
              "9": "CVC_CVV_VALIDATED_VALID",
              "10": "CVC_CVV_VALIDATED_INVALID",
              "11": "INTERNET_PINNED_DEBIT_TRANSACTION",
              "12": "SECURE_REMOTE_COMMERCE_SRC"
            }
          },
          "terminalType": {
            "start": 9,
            "end": 10,
            "mapping": {
              "00": "TERMINAL_TYPE_UNKNOWN",
              "01": "ADMINISTRATIVE_TERMINAL",
              "02": "POS_TERMINAL",
              "03": "ATM",
              "04": "HOME_TERMINAL",
              "05": "ELECTRONIC_CASH_REGISTER",
              "06": "DIAL_UP_TELEPHONE_TERMINAL",
              "07": "TRAVELERS_CHECK_MACHINE",
              "08": "AUTOMATED_FUEL_DEVICE",
              "09": "SCRIP_MACHINE",
              "10": "COUPON_MACHINE",
              "11": "TICKET_MACHINE",
              "12": "POINT_OF_BANKING_TERMINAL",
              "13": "TELLER",
              "14": "FRANCHISE_TELLER",
              "15": "PERSONAL_BANKING",
              "16": "PUBLIC_UTILITY",
              "17": "VENDING",
              "18": "SELF_SERVICE",
              "19": "AUTHORIZATION",
              "20": "PAYMENT",
              "21": "VRU",
              "22": "SMARTPHONE_POS_DEVICE",
              "23": "INTERACTIVE_TELEVISION",
              "24": "PDA",
              "25": "SCREEN_PHONE",
              "26": "ELECTRONIC_COMMERCE",
              "27": "MICR_TERMINALS_POS"
            }
          },
          "cardDataInputCapability": {
            "position": 11,
            "mapping": {
              "0": "CARD_DATA_INPUT_CAPABILITY_UNKNOWN",
              "1": "MANUAL_NO_TERMINAL",
              "2": "MAGNETIC_STRIPE",
              "3": "BARCODE_QRCODE",
              "4": "OCR",
              "5": "ICC_CHIP",
              "6": "KEY_ENTRY",
              "7": "FILE",
              "8": "CONTACTLESS_MAG_STRIPE_KEY_ENTRY",
              "9": "CONTACTLESS_CHIP_MAG_STRIPE_ICC_KEY_ENTRY",
              "10": "MAG_STRIPE_KEY_ENTRY",
              "11": "MAG_STRIPE_KEY_ENTRY_EMV_ICC",
              "12": "MAG_STRIPE_EMV_ICC",
              "13": "SECURE_CARD_LESS_ENTRY"
            }
          }
        }
      }
    }
  },
  "59": {
    "name": "National Point-of-Service Geographical Data",
    "canonical": [
      "transaction.nationalPOSGeographicData.state",
      "transaction.nationalPOSGeographicData.county",
      "transaction.nationalPOSGeographicData.postalCode",
      "transaction.nationalPOSGeographicData.countryCode"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Includes State/Region Code, County Code, Postal Service Code, and Country Code. Configurable to be passed.",
    "max_length": 17,
    "active": false,
    "SampleData": "012NPOSGDMAX017",
    "validation": {
      "type": "national_pos_geographic_data",
      "rules": {
        "positions": {
          "state": {
            "start": 1,
            "end": 2
          },
          "county": {
            "start": 3,
            "end": 5
          },
          "postalCode": {
            "start": 6,
            "end": 14
          },
          "countryCode": {
            "start": 15,
            "end": 17
          }
        }
      }
    }
  },
  "60": {
    "name": "Advice/Reversal Reason Code",
    "canonical": [
      "transaction.reversalReason",
      "transaction.adviceReason"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 4,
    "notes": "Positions 1-2 determine type (80=reversal, 40=advice). Positions 3-4 contain the specific reason code with multiple combinations mapping to same enum.",
    "active": false,
    "SampleData": "8021",
    "validation": {
      "type": "advice_reversal_code",
      "rules": {
        "positions": {
          "type": {
            "start": 1,
            "end": 2,
            "mapping": {
              "80": "REVERSAL",
              "40": "ADVICE"
            }
          },
          "reversalReasons": {
            "00": "NOT_A_REVERSAL",
            "21": "INCREMENTAL_AUTHORIZATION",
            "31": "INCREMENTAL_AUTHORIZATION",
            "22": "TERMINAL_PROCESSOR_ERROR",
            "32": "TERMINAL_PROCESSOR_ERROR",
            "23": "SYSTEM_TIME_OUT",
            "33": "SYSTEM_TIME_OUT",
            "24": "ATM_TERMINAL_ERROR",
            "34": "ATM_TERMINAL_ERROR",
            "25": "TERMINAL_COMMUNICATION_ERROR",
            "35": "TERMINAL_COMMUNICATION_ERROR",
            "26": "TERMINAL_ERROR",
            "36": "TERMINAL_ERROR",
            "27": "LATE_OR_UNSOLICITED_RESPONSE",
            "37": "LATE_OR_UNSOLICITED_RESPONSE",
            "28": "CUSTOMER_CANCELLATION",
            "38": "CUSTOMER_CANCELLATION",
            "2A": "CHECK_CANNOT_BE_RETAINED",
            "3A": "CHECK_CANNOT_BE_RETAINED",
            "2B": "COIN_DISPENSER_PROBLEM",
            "3B": "COIN_DISPENSER_PROBLEM",
            "2C": "CASH_PRESENTATION_PROBLEM",
            "3C": "CASH_PRESENTATION_PROBLEM",
            "2D": "MULTIPLE_CHECK_CASHING_PROBLEMS",
            "3D": "MULTIPLE_CHECK_CASHING_PROBLEMS",
            "2E": "SUSPECT_FRAUD",
            "3E": "SUSPECT_FRAUD",
            "2F": "RECALCULATED_CURRENCY_CONVERSION_FEES",
            "3F": "RECALCULATED_CURRENCY_CONVERSION_FEES",
            "2G": "REVISED_HOLD_AMOUNT",
            "3G": "REVISED_HOLD_AMOUNT"
          },
          "adviceReasons": {
            "00": "NOT_AN_ADVICE",
            "21": "TIMED_OUT_REQUEST_MESSAGE",
            "31": "TIMED_OUT_REQUEST_MESSAGE",
            "22": "ISSUER_NOT_AVAILABLE",
            "32": "ISSUER_NOT_AVAILABLE",
            "23": "ISSUER_SIGNED_OFF",
            "33": "ISSUER_SIGNED_OFF",
            "24": "WITHIN_BUSINESS_AGREEMENT",
            "34": "WITHIN_BUSINESS_AGREEMENT",
            "25": "POS_ALTERNATE_AUTHORIZATION",
            "35": "POS_ALTERNATE_AUTHORIZATION",
            "26": "POS_MERCHANT_AUTHORIZATION",
            "36": "POS_MERCHANT_AUTHORIZATION",
            "27": "POS_SWITCH_AUTHORIZATION_UNDER_FLOOR_LIMIT",
            "37": "POS_SWITCH_AUTHORIZATION_UNDER_FLOOR_LIMIT",
            "28": "ENCRYPTION_KEY_NOT_ESTABLISHED",
            "38": "ENCRYPTION_KEY_NOT_ESTABLISHED",
            "29": "ISSUER_REQUESTED_STAND_IN",
            "39": "ISSUER_REQUESTED_STAND_IN",
            "2A": "CHECK_NOT_RETURNED",
            "3A": "CHECK_NOT_RETURNED",
            "2B": "COIN_DISPENSE_PROBLEM",
            "3B": "COIN_DISPENSE_PROBLEM",
            "2C": "AUTOMATIC_FUEL_DISPENSER",
            "3C": "AUTOMATIC_FUEL_DISPENSER",
            "2D": "CARD_AUTHENTICATION_METHOD_FAILURE",
            "2E": "DEPOSIT_KEYING_ERROR",
            "2F": "DEPOSITED_ITEM_NON_NEGOTIABLE",
            "2G": "TRANSACTION_BLOCKING",
            "2I": "TOKEN_CREATE",
            "2J": "TOKEN_DEACTIVATE",
            "2K": "TOKEN_SUSPEND",
            "2L": "TOKEN_RESUME",
            "2M": "DEVICE_PROVISIONING_RESULT",
            "2N": "OTP_VERIFICATION_RESULTS",
            "2O": "MOBILE_BANKING_APP_ACTIVATION",
            "2P": "REPLENISHMENT_CONFIRMATION_OF_LIMITED_USE_KEYS",
            "2Q": "TOKENIZATION_EXCEPTION_EVENT",
            "2R": "CALL_CENTER_ACTIVATION",
            "2S": "PAN_EXPIRATION_DATE_UPDATE",
            "2T": "PAN_REPLACEMENT",
            "2U": "TOKEN_REPLACEMENT",
            "2V": "TOKEN_EXPIRY_UPDATE",
            "2W": "DEPOSITED_AMOUNT_DIFFERS_FROM_ENTERED_AMOUNT",
            "2X": "DEPOSITED_FOREIGN_ITEM",
            "5B": "ADJUSTMENT",
            "5C": "CHARGEBACK",
            "5M": "CHARGEBACK_REVERSAL_ADVICE",
            "5N": "REPRESENTMENT_REVERSAL_ADVICE",
            "5P": "PRE_ARBITRATION_CHARGEBACK",
            "5Q": "PRE_ARBITRATION_CHARGEBACK_REVERSAL_ADVICE",
            "5R": "REPRESENTMENT",
            "5S": "ARBITRATION_CHARGEBACK",
            "8A": "DEVICE_BINDING",
            "8B": "DEVICE_BINDING_RESULTS",
            "8C": "OTP_VERIFICATION_RESULT_DEVICE_BINDING",
            "8D": "CALL_CENTER_STEP_UP_DEVICE_BINDING",
            "8E": "MOBILE_BANKING_APP_STEP_UP_DEVICE_BINDING",
            "8F": "DEVICE_BINDING_REMOVED",
            "8G": "CARDHOLDER_VERIFICATION_RESULTS",
            "8H": "OTP_VERIFICATION_RESULT_CARDHOLDER_VERIFICATION",
            "8I": "CALL_CENTER_STEP_UP_CARDHOLDER_VERIFICATION",
            "8J": "MOBILE_BANKING_APP_STEP_UP_CARDHOLDER_VERIFICATION"
          }
        }
      }
    }
  },
  "61": {
    "name": "Acquirer Transport Data",
    "canonical": [
      "transaction.acquirer.transportData"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Echoed to the acquirer in the response. Not passed to the issuer.",
    "max_length": 100,
    "active": false,
    "SampleData": "020ABC12345678910MAX100"
  },
  "63": {
    "name": "Mastercard Networks Exchange Data",
    "canonical": [
      "transaction.Network.pseudoTerminal",
      "transaction.Network.acquirerNetworkId",
      "transaction.Network.processorId",
      "transaction.Network.ProcessingFlag.isExternallySettled",
      "transaction.Network.ProcessingFlag.partialAuthTerminalSupportIndicator"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 22,
    "notes": "Contains network processing data including terminal, network, and processor IDs along with processing flags.",
    "active": false,
    "SampleData": "B2PT0012MC1PRC001Y 1  ",
    "validation": {
      "type": "network_data",
      "rules": {
        "positions": {
          "pseudoTerminal": {
            "start": 3,
            "end": 8
          },
          "acquirerNetworkId": {
            "start": 9,
            "end": 10
          },
          "processorId": {
            "start": 12,
            "end": 17
          },
          "processingFlags": {
            "isExternallySettled": {
              "position": 18,
              "mapping": {
                "Y": "SETTLED_BETWEEN_ACQUIRER_AND_ISSUER",
                " ": "SETTLED_THROUGH_NETWORK_EXCHANGE"
              }
            },
            "partialAuthTerminalSupportIndicator": {
              "position": 20,
              "mapping": {
                "1": "TERMINAL_SUPPPORT_PARTIAL_APPROVAL",
                "0": "TERMINAL_DOES_NOT_SUPPPORT_PARTIAL_APPROVAL",
                " ": "TERMINAL_DOES_NOT_SUPPPORT_PARTIAL_APPROVAL",
                "2": "RETURNS_BALANCES_IN_RESPONSE"
              }
            }
          }
        }
      }
    }
  },
  "67": {
    "name": "Extended Payment Code",
    "canonical": [],
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "01",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "validation": {
      "skip": true,
      "reason": "Extended Payment Code is not canonicalized because it is not required."
    }
  },
  "70": {
    "name": "Network Management Information code",
    "canonical": [
      "Soum - NMS canonical model"
    ],
    "format": "unknown",
    "type": "alphanumeric",
    "length": null,
    "active": false,
    "notes": ""
  },
  "73": {
    "name": "Date, Action",
    "canonical": [],
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "120625",
    "notes": "Not implementes in MC documentation",
    "validation": {
      "skip": true,
      "reason": "Date, Action is not canonicalized because it is not required."
    }
  },
  "90": {
    "name": "Original Data Elements",
    "canonical": [
      "transaction.originalTransaction.transactionType",
      "transaction.originalTransaction.systemTraceAuditNumber",
      "transaction.originalTransaction.transmissionDateTime",
      "transaction.originalTransaction.acquirer.acquirerId",
      "transaction.originalTransaction.forwardingInstitution.forwardingInstitutionId"
    ],
    "format": "fixed",
    "type": "numeric",
    "length": 42,
    "notes": "Required on inbound messages to Mastercard Networks Exchange. The remaining subelements may be zero-filled. Outbound from Mastercard Networks Exchange, the original message type is sent. Original system trace audit number and local date and time are sent if available.",
    "active": false,
    "SampleData": "111111111111111111111111111111111111111142",
    "validation": {
      "type": "original_data",
      "rules": {
        "positions": {
          "messageType": {
            "start": 1,
            "end": 4,
            "mapping": {
              "0100": "AUTH_REQ",
              "0200": "FIN_REQ"
            }
          },
          "systemTraceAuditNumber": {
            "start": 5,
            "end": 10,
            "removeLeadingZeros": true
          },
          "transmissionDateTime": {
            "start": 11,
            "end": 20
          },
          "acquirerId": {
            "start": 21,
            "end": 31,
            "removeLeadingZeros": true
          },
          "forwardingInstitutionId": {
            "start": 32,
            "end": 42,
            "removeLeadingZeros": true
          }
        }
      }
    }
  },
  "95": {
    "name": "Replacement Amounts",
    "canonical": [
      "transaction.replacementAmount.transactionAmount.amount",
      "transaction.replacementAmount.settlementAmount.amount",
      "transaction.replacementAmount.transactionFees.transactionFees.amount",
      "transaction.replacementAmount.transactionFees.transactionFees.debitCreditIndicatorType",
      "transaction.replacementAmount.settlementFees.settlementFees.amount",
      "transaction.replacementAmount.settlementFees.settlementFees.debitCreditIndicatorType"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 42,
    "notes": "Required from acquirers, or sent to issuers, for ATM partial dispenses and for transactions where the amount that was successful is different from the authorized amount.",
    "active": false,
    "SampleData": "000000000120000000000010C00000080D00000080",
    "validation": {
      "type": "replacement_amounts",
      "rules": {
        "mti": {
          "required": "0420",
          "skipReason": "DE 95 validation only applicable for MTI 0420"
        },
        "positions": {
          "transactionAmount": {
            "start": 1,
            "end": 12,
            "type": "numeric",
            "removeLeadingZeros": true
          },
          "settlementAmount": {
            "start": 13,
            "end": 24,
            "type": "numeric",
            "removeLeadingZeros": true
          },
          "transactionFees": {
            "start": 25,
            "end": 33,
            "components": {
              "debitCreditIndicator": {
                "position": 24,
                "mapping": {
                  "D": "DEBIT_AMOUNT",
                  "C": "CREDIT_AMOUNT"
                }
              },
              "amount": {
                "start": 25,
                "end": 33,
                "type": "numeric",
                "removeLeadingZeros": true
              }
            }
          },
          "settlementFees": {
            "start": 34,
            "end": 42,
            "components": {
              "debitCreditIndicator": {
                "position": 34,
                "mapping": {
                  "D": "DEBIT_AMOUNT",
                  "C": "CREDIT_AMOUNT"
                }
              },
              "amount": {
                "start": 35,
                "end": 42,
                "type": "numeric",
                "removeLeadingZeros": true
              }
            }
          }
        }
      }
    }
  },
  "96": {
    "name": "Message Security Code",
    "canonical": [
      "Network management Password"
    ],
    "format": "fixed",
    "type": "binary",
    "length": 64,
    "notes": "Processor-assigned password. Required when DE 70 (Network Management Information Code) contains specific values.",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100"
  },
  "98": {
    "name": "Payee",
    "format": "fixed",
    "length": 25,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ABCJOHNSMIT09213020320211",
    "notes": "Sent if available and if the transaction is a payment transaction."
  },
  "100": {
    "name": "Receiving Institution Identification Code",
    "canonical": [
      "transaction.receivingInstitutionId"
    ],
    "format": "llvar",
    "type": "numeric",
    "length": null,
    "notes": "Sent if routing is based on this DE instead of the PAN.",
    "max_length": 11,
    "active": false,
    "SampleData": "11111111111"
  },
  "111": {
    "name": "Additional Data, Private Acquirer",
    "canonical": [
      "transaction.additionalData.formatIdentifier",
      "transaction.additionalData.mcAssignedId",
      "transaction.additionalData.isCnp",
      "transaction.additionalData.address.zipCode",
      "transaction.additionalData.operatingEnvironment",
      "transaction.additionalData.posEntryMode",
      "transaction.additionalData.posTransactionStatus",
      "transaction.additionalData.finalAuthIndicator",
      "transaction.additionalData.linkedTransactionId",
      "transaction.additionalData.incrementalAuthIndicator"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Contains format-specific (MC/MD) data elements with primary and secondary bitmaps determining field presence.",
    "max_length": 225,
    "active": true,
    "SampleData": {
      "MC": "MC012FFFFEBFF551234567891234226001311234012333355513330123456705071204252741852963741852963741852963741122i225599101188101123412345678912FFFF0000123456789121234567891234561040221123221122213331234567891222aRyU-3Ti981f_6WvBaqM03",
      "MD": "MD053DFE60041333555NXMS0010059001100004000dtsviQ6qT-mkEVM4r1YWvw"
    },
    "validation": {
      "type": "additional_data",
      "rules": {
        "formatIdentifiers": {
          "MC": {
            "primaryBitmap": {
              "position": "6-13",
              "fields": {
                "6": {
                  "name": "zipCode",
                  "length": 10,
                  "path": "transaction.additionalData.address.zipCode"
                },
                "7": {
                  "name": "isCnp",
                  "length": 1,
                  "path": "transaction.additionalData.isCnp"
                },
                "9": {
                  "name": "mcAssignedId",
                  "length": 6,
                  "path": "transaction.additionalData.mcAssignedId"
                },
                "19": {
                  "name": "incrementalAuthIndicator",
                  "length": 1,
                  "path": "transaction.additionalData.incrementalAuthIndicator"
                },
                "26": {
                  "name": "finalAuthIndicator",
                  "length": 1,
                  "path": "transaction.additionalData.finalAuthIndicator"
                }
              }
            },
            "secondaryBitmap": {
              "position": "32",
              "fields": {
                "16": {
                  "name": "linkedTransactionId",
                  "length": 22,
                  "path": "transaction.additionalData.linkedTransactionId"
                }
              }
            }
          },
          "MD": {
            "primaryBitmap": {
              "position": "6-13",
              "fields": {
                "1": {
                  "name": "mcAssignedId",
                  "length": 6,
                  "path": "transaction.additionalData.mcAssignedId"
                },
                "5": {
                  "name": "isCnp",
                  "length": 1,
                  "path": "transaction.additionalData.isCnp"
                },
                "6": {
                  "name": "operatingEnvironment",
                  "length": 1,
                  "path": "transaction.additionalData.operatingEnvironment"
                },
                "11": {
                  "name": "posEntryMode",
                  "length": 2,
                  "path": "transaction.additionalData.posEntryMode"
                },
                "15": {
                  "name": "posTransactionStatus",
                  "length": 1,
                  "path": "transaction.additionalData.posTransactionStatus"
                },
                "26": {
                  "name": "finalAuthIndicator",
                  "length": 1,
                  "path": "transaction.additionalData.finalAuthIndicator"
                }
              }
            },
            "secondaryBitmap": {
              "position": "32",
              "fields": {
                "18": {
                  "name": "linkedTransactionId",
                  "length": 22,
                  "path": "transaction.additionalData.linkedTransactionId"
                }
              }
            }
          }
        }
      }
    }
  },
  "113": {
    "name": "Authorizing Agent Institution ID Code (ANSI-defined)",
    "canonical": [
      "transaction.authorizingAgentInstitutionId"
    ],
    "format": "lllvar",
    "type": "numeric",
    "length": null,
    "notes": "Required only if requested by the issuer.",
    "max_length": 11,
    "active": false,
    "SampleData": "11111111111"
  },
  "123": {
    "name": "Additional Data",
    "canonical": [
      "transaction.member.address.zipCode"
    ],
    "format": "lllvar",
    "type": "alphanumeric",
    "length": null,
    "notes": "Contains AVS data with dynamic zip code length. Format: TDAV[length:2][zipcode:length]. Example: TDAV0510001 where 05 is length and 10001 is zipcode.",
    "max_length": 50,
    "active": false,
    "SampleData": "TDAV0510001CV0711055 P",
    "validation": {
      "type": "avs_data",
      "rules": {
        "positions": {
          "prefix": {
            "start": 1,
            "end": 4,
            "expected": "TDAV"
          },
          "zipCodeLength": {
            "start": 5,
            "end": 6,
            "type": "numeric"
          },
          "zipCode": {
            "dynamicStart": 7,
            "dynamicLength": "zipCodeLength"
          }
        }
      }
    }
  },
  "124": {
    "name": "Tag Data Acquirer",
    "canonical": [
      "transaction.incrementalAuthorization.incrementalAuthorizationType",
      "transaction.incrementalAuthorization.sequence",
      "transaction.incrementalAuthorization.count"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 12,
    "notes": "Contains incremental authorization data in TLV format. CN tag represents count, SN tag represents sequence number. Only valid for MTI 0220.",
    "active": false,
    "SampleData": "CN0201SN0201",
    "validation": {
      "type": "incremental_auth_data",
      "rules": {
        "mti": {
          "required": "0220",
          "skipReason": "DE 124 validation only applicable for MTI 0220"
        },
        "tags": {
          "CN": {
            "name": "count",
            "path": "transaction.incrementalAuthorization.count",
            "lengthBytes": 2,
            "valueType": "numeric"
          },
          "SN": {
            "name": "sequence",
            "path": "transaction.incrementalAuthorization.sequence",
            "lengthBytes": 2,
            "valueType": "numeric"
          }
        },
        "authorizationType": {
          "mapping": {
            "default": "MULTIPLE_COMPLETION"
          }
        }
      }
    }
  },
  "126": {
    "name": "Issuer Trace Data",
    "canonical": [
      "transaction.issuerTraceData.formatCode",
      "transaction.issuerTraceData.systemTraceAuditNumber",
      "transaction.issuerTraceData.transmissionDateTime",
      "transaction.issuerTraceData.settlementDate",
      "transaction.issuerTraceData.financialNetworkCode",
      "transaction.issuerTraceData.banknetReferenceNumber",
      "transaction.issuerTraceData.merchantType",
      "transaction.issuerTraceData.traceId"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 52,
    "notes": "Contains issuer trace data for dual message authorization format. Format code 6 indicates DUAL_MESSAGE_AUTH_FORMAT_CODE. BanknetReferenceNumber length varies based on merchantType presence.",
    "active": false,
    "SampleData": "600013705161921220531MPX8523690000000AXD123456789123",
    "validation": {
      "type": "issuer_trace_data",
      "rules": {
        "positions": {
          "formatCode": {
            "position": 1,
            "mapping": {
              "6": "DUAL_MESSAGE_AUTH_FORMAT_CODE"
            }
          },
          "systemTraceAuditNumber": {
            "start": 2,
            "end": 7,
            "length": 6
          },
          "transmissionDateTime": {
            "start": 8,
            "end": 17,
            "length": 10,
            "format": "MMDDhhmmss"
          },
          "settlementDate": {
            "start": 18,
            "end": 21,
            "length": 4,
            "format": "MMDD"
          },
          "financialNetworkCode": {
            "start": 22,
            "end": 24,
            "length": 3
          },
          "banknetReferenceNumber": {
            "start": 25,
            "end": 33,
            "length": "dynamic",
            "minLength": 6,
            "maxLength": 9,
            "notes": "Length is 9 if merchantType is present, 6 otherwise"
          },
          "merchantType": {
            "start": 34,
            "end": 37,
            "length": 4,
            "optional": true,
            "notes": "Present only if banknetReferenceNumber is 9 characters"
          },
          "traceId": {
            "start": 38,
            "end": 52,
            "length": 15
          }
        }
      }
    }
  },
  "127": {
    "name": "Acquirer Trace Data",
    "canonical": [
      "transaction.acquirerTraceData.formatCode",
      "transaction.acquirerTraceData.settlementDate",
      "transaction.acquirerTraceData.terminalType",
      "transaction.acquirerTraceData.acquirerInstituionId",
      "transaction.acquirerTraceData.settlementIndicator",
      "transaction.acquirerTraceData.interchangeRateDesignator",
      "transaction.acquirerTraceData.businessDate",
      "transaction.acquirerTraceData.productIdentifier",
      "transaction.acquirerTraceData.businessCycle",
      "transaction.acquirerTraceData.mastercardRateIndicator",
      "transaction.acquirerTraceData.settlementServiceLevelCode",
      "transaction.acquirerTraceData.currencyConversionDate",
      "transaction.acquirerTraceData.currencyConversionIndicator",
      "transaction.acquirerTraceData.acquirerReferenceNumberObject.mixedUse",
      "transaction.acquirerTraceData.acquirerReferenceNumberObject.acquirerReferenceId",
      "transaction.acquirerTraceData.acquirerReferenceNumberObject.julianDate",
      "transaction.acquirerTraceData.acquirerReferenceNumberObject.acquirerSequence",
      "transaction.acquirerTraceData.acquirerReferenceNumberObject.checkDigit",
      "transaction.acquirerTraceData.transactionLifeCycle.lifeCycleSupportIndicator",
      "transaction.acquirerTraceData.transactionLifeCycle.traceId",
      "transaction.acquirerTraceData.businessActivity.acceptanceBrandId",
      "transaction.acquirerTraceData.businessActivity.businessServiceLevelCode",
      "transaction.acquirerTraceData.businessActivity.businessServiceIdCode"
    ],
    "format": "fixed",
    "type": "alphanumeric",
    "length": 93,
    "notes": "Contains acquirer trace data including format code, reference numbers, and various business indicators.",
    "active": false,
    "SampleData": "513333332025147258369129101478159236961000000000010505147500000562325050200309250502812505021",
    "validation": {
      "type": "acquirer_trace_data",
      "rules": {
        "positions": {
          "formatCode": {
            "position": 1,
            "mapping": {
              "5": "DUAL_MESSAGE_CLEARING_FORMAT_CODE"
            }
          },
          "acquirerReferenceNumber": {
            "start": 2,
            "end": 24,
            "components": {
              "mixedUse": {
                "position": 2,
                "length": 1
              },
              "acquirerReferenceId": {
                "start": 3,
                "end": 8,
                "length": 6
              },
              "julianDate": {
                "start": 9,
                "end": 12,
                "length": 4
              },
              "acquirerSequence": {
                "start": 13,
                "end": 23,
                "length": 11
              },
              "checkDigit": {
                "position": 24,
                "length": 1
              }
            }
          },
          "terminalType": {
            "start": 25,
            "end": 27,
            "length": 3
          },
          "acquirerInstituionId": {
            "start": 28,
            "end": 38,
            "length": 11
          },
          "transactionLifeCycle": {
            "start": 39,
            "end": 54,
            "components": {
              "lifeCycleSupportIndicator": {
                "position": 39,
                "length": 1
              },
              "traceId": {
                "start": 40,
                "end": 54,
                "length": 15
              }
            }
          },
          "businessActivity": {
            "start": 55,
            "end": 64,
            "components": {
              "acceptanceBrandId": {
                "start": 55,
                "end": 57,
                "length": 3
              },
              "businessServiceLevelCode": {
                "position": 58,
                "length": 1
              },
              "businessServiceIdCode": {
                "start": 59,
                "end": 64,
                "length": 6
              }
            }
          },
          "settlementIndicator": {
            "position": 65,
            "length": 1
          },
          "interchangeRateDesignator": {
            "start": 66,
            "end": 67,
            "length": 2
          },
          "businessDate": {
            "start": 68,
            "end": 73,
            "length": 6,
            "format": "YYMMDD"
          },
          "productIdentifier": {
            "start": 74,
            "end": 76,
            "length": 3
          },
          "businessCycle": {
            "start": 77,
            "end": 78,
            "length": 2
          },
          "settlementDate": {
            "start": 79,
            "end": 84,
            "length": 6,
            "format": "YYMMDD"
          },
          "mastercardRateIndicator": {
            "position": 85,
            "length": 1
          },
          "settlementServiceLevelCode": {
            "position": 86,
            "length": 1,
            "mapping": {
              "1": "Regional",
              "3": "Intracurrency"
            }
          },
          "currencyConversionDate": {
            "start": 87,
            "end": 92,
            "length": 6,
            "format": "YYMMDD"
          },
          "currencyConversionIndicator": {
            "position": 93,
            "length": 1,
            "mapping": {
              "0": "Not Applicable",
              "1": "Matched with authorization",
              "2": "No match found"
            }
          }
        }
      }
    }
  },
  "128": {
    "name": "Message Authenticate Code",
    "canonical": [
      "Need to discuss"
    ],
    "format": "fixed",
    "type": "binary",
    "length": 64,
    "notes": "Required when MACing messages, at least one DE between 65-127 is present, and no DEs between 129-191 are present.",
    "active": false,
    "SampleData": "1000001000111010101001100101011001000111100000000010110110100011"
  }
}